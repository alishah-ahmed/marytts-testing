allprojects {
    apply plugin: 'groovy'

    repositories {
        jcenter()
    }
}

apply from: 'reference-marytts.gradle'
apply from: 'bleeding-marytts.gradle'

subprojects.findAll { it.name.length() == 2 }.each { proj ->
    proj.repositories {
        ['http://wikipedia.c3sl.ufpr.br/', 'https://dumps.wikimedia.org/'].each { mirror ->
            ivy {
                url mirror
                layout 'pattern', {
                    artifact '[module]/[revision]/[module]-[revision]-[classifier].[ext]'
                }
            }
        }
    }

    proj.configurations {
        wikipedia
    }

    proj.ext {
        wikiDir = file("$proj.buildDir/wikidump")
    }

    proj.task('getWikipediaDump', type: Copy) {
        from proj.configurations.wikipedia
        into proj.wikiDir
    }

    proj.task('extractPlainText') {
        inputs.files proj.getWikipediaDump
        outputs.files "${proj.wikiDir}/text"
        doLast {
            inputs.files.asFileTree.files.each { dumpFile ->
                exec {
                    commandLine = ['python', "$rootDir/wikiextractor/WikiExtractor.py", '--no-templates', dumpFile]
                    workingDir proj.wikiDir
                }
            }
        }
    }
}

subprojects.findAll { it.name ==~ /(reference|bleeding)/ }.each { proj ->
    proj.repositories {
        ivy {
            url project(":$proj.name-marytts").projectDir.path + '/lib/repo'
            layout 'maven'
        }
    }

    proj.dependencies {
        compile localGroovy()
        compile project(":$proj.name-marytts:marytts-languages:marytts-lang-$proj.parent.name")
    }

    proj.sourceSets {
        main {
            groovy {
                srcDir "$rootDir/src/main/groovy"
            }
        }
    }

    proj.task('convertTextToAllophones') {
        dependsOn proj.classes
        doLast {
            javaexec {
                main 'Text2Allophones'
                classpath proj.sourceSets.main.runtimeClasspath
                args proj.parent.name
                workingDir proj.buildDir
            }
        }
    }
}
